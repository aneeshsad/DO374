---
- name: Configure virtual machines for automation
  hosts: "{{ my_vm_name }}"
  gather_facts: true

  vars:

    my_user: ansible
    my_nfs_server: belfast.example.com
    my_home: /home
    my_timezone: Europe/London 
    my_org: example

  tasks:

    - name: Ensure vault variables are included
      include_vars:
        file: ../vault.yml

    - name: Tasks block for non-Satellite clients
      when: satellite_enabled == "No"
      block:

      - name: Ensure system is registered
        redhat_subscription:
          username: "{{ my_rhsm_user }}"
          password: "{{ my_password }}"

      - name: Ensure all repositories are disabled
        rhsm_repository:
          name: '*'
          state: disabled

      - name: Ensure base and appstream repositories are enabled
        when: ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_major_version'] == "9" 
        loop:
          - rhel-9-for-x86_64-baseos-rpms
          - rhel-9-for-x86_64-appstream-rpms
        rhsm_repository:
          name: "{{ item }}"
          state: enabled

      - name: Ensure base and appstream repositories are enabled
        when: ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_major_version'] == "8" 
        loop:
          - rhel-8-for-x86_64-baseos-rpms
          - rhel-8-for-x86_64-appstream-rpms
        rhsm_repository:
          name: "{{ item }}"
          state: enabled

      - name: Ensure rhel-7-server-rpms repositories are enabled
        when: ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_major_version'] == "7"
        loop:
          - rhel-7-server-rpms
          - rhel-7-server-extras-rpms
          - rhel-server-rhscl-7-rpms
        rhsm_repository:
          name: "{{ item }}"
          state: enabled

    - name: Tasks block for Satellite clients
      when: satellite_enabled == "Yes"
      block:

      - name: Install the katello-ca-consumer-latest rpm from a remote repo
        yum:
          name: https://satellite.example.com/pub/katello-ca-consumer-latest.noarch.rpm
          state: present
          validate_certs: false
          disable_gpg_check: true

      - name: Set fact for RHEL 7 Satellite activation key
        when: ansible_distribution == "RedHat" and ansible_distribution_major_version == "7"
        set_fact:
          my_key: example-7

      - name: Set fact for RHEL 8 Satellite activation key
        when: ansible_distribution == "RedHat" and ansible_distribution_major_version == "8"
        set_fact:
          my_key: example-8

      - name: Set fact for RHEL 9 Satellite activation key
        when: ansible_distribution == "RedHat" and ansible_distribution_major_version == "9"
        set_fact:
          my_key: example-9

      - name: Ensure system is registered with Satellite
        redhat_subscription:
          activationkey: "{{ my_key }}"
          org_id: "{{ my_org }}"

    - name: Ensure basic tools are installed
      yum:
        name:
          - git
          - rsync
          - vim
          - cockpit
          - cockpit-packagekit
          - cockpit-pcp
          - cockpit-storaged
          - firewalld
          - nfs-utils
          - autofs
          - python3-netaddr
        state: latest

    - name: Ensure katello-agent is installed
      when: 
        - ansible_facts['distribution'] == "RedHat" and (ansible_facts['distribution_major_version'] == "7" or ansible_facts['distribution_major_version'] == "8")
        - satellite_enabled == "Yes"
      yum:
        name: katello-agent
        state: installed

    - name: Ensure insights-client is installed
      notify: Ensure insights-client is registered
      package:
        name: insights-client
        state: latest

    - name: Ensure core services are started
      loop:
        - cockpit.socket
        - firewalld.service
      systemd:
        name: "{{ name }}"
        state: "{{ state }}"
        enabled: true

    - name: Ensure timezone is set
      timezone:
        name: "{{ my_timezone }}"

    - name: Ensure cockpit motd is removed
      file:
        path: /etc/motd.d/cockpit
        state: absent

    - name: Ensure ansible user exists
      user:
        name: "{{ my_user }}"
        password: "{{ my_password | password_hash('sha512') }}"
        groups: wheel
        state: present
        update_password: on_create

    - name: Ensure ssh key is installed
      loop:
        - "{{ my_user }}"
        - root
      authorized_key:
        manage_dir: yes
        user: "{{ item }}"
        key: "{{ lookup('file', 'id_rsa.pub') }}"

    - name: Ensure automount is setup
      freeipa.ansible_freeipa.ipaautomountlocation:
        ipaadmin_password: "{{ my_password }}"
        name: home
        state: present

    # - name: Ensure home directories master map is available
    #   notify: Ensure autofs is restarted
    #   copy:
    #     src: home.master 
    #     dest: /etc/auto.master.d/home.autofs
  
    # - name: Ensure home directories share is available
    #   notify: Ensure autofs is restarted
    #   copy:
    #     src: home.autofs
    #     dest: /etc/auto.home
  
  handlers:

    - name: Ensure autofs is restarted
      systemd:
        name: autofs.service
        state: restarted

    - name: Ensure insights-client is registered
      command: insights-client --register
