#!/bin/bash
#
# Copyright 2017 Red Hat, Inc.
#
# NAME
#     lab-auth-manage - grading script for RH362 auth-manage GE
#
# SYNOPSIS
#     lab-auth-manage {setup}
#
#        setup   - prepare the system for starting the lab
#        grade   - perform evaluation steps on the system
#        cleanup - perform post-lab cleanup
#        solve   - do the lab exercise for the student (may call setup)
#        (ONLY INCLUDE PROVIDED COMMANDS, REMOVE REST)
#
# DESCRIPTION
#     This script, based on singular argument, either does setup, grading,
#     cleanup, or solve.
#
# CHANGELOG
#   * Tue Apr 3 2018 Victor Costea <vcostea@redhat.com>
#   - Add cleanup script and modify valid_commands array
#   * Wed Mar 14 2018 Chen Chang <cchang@redhat.com>
#   - original code
#########################################################################
#########################################################################

PATH=/usr/bin:/bin:/usr/sbin:/sbin

# Initialize and set some variables
run_as_root='true'
idmtarget='idm.lab.example.net'
clienttarget='client.lab.example.net'
workstationtarget='workstation.lab.example.com'

# This defines which subcommands are supported (setup, grade, etc.).
# Corresponding lab_COMMAND functions must be defined.
declare -a valid_commands=(setup cleanup)


function lab_setup {
  target=${idmtarget}
  package='ipa-server'

  print_header "Setting up ${target} for lab exercise work:"
  host_reachable ${target}

  # Check for lab prerequisites
  CMD="rpm -q ${package}"
  if ! ${ssh} ${target} "${CMD}"
  then
    if ! rpm -q ansible
    then
      pad ' · Installing Ansible'
      yum install -y http://materials.example.com/classroom/ansible/ansible-2.5.0-0.0.devel.201801312256git.512d6f6ac6.el7.ans.noarch.rpm
      if [ $? -eq 0 ]
      then
        print_SUCCESS
      else
        print_FAIL
      fi
    fi

    if [ ! -d "$ansdir" ]; then
    pad " · Creating Ansible directory"

    ansdir='/home/student/ansible'
      mkdir $ansdir && chown -R student:student $ansdir
      if [ $? -eq 0 ]
      then
        print_SUCCESS
      else
        print_FAIL
      fi
    fi

    pad " · Installing prerequisites on ${target} host"
    cd /home/student/ansible && curl -O http://materials.example.com/classroom/ansible/ansible.cfg && curl -O http://materials.example.com/classroom/ansible/inventory && curl -O http://materials.example.com/classroom/ansible/install_ipa_server.yml && ansible-playbook install_ipa_server.yml
    if [ $? -eq 0 ]
    then
      print_SUCCESS
    else
      print_FAIL
    fi
  else
    pad " · ${package} package is installed on ${target}"
    print_SUCCESS
  fi

  CMD="ipa user-show idmuser01"
  if ! ${ssh} ${target} "${CMD}"
  then
    pad " · Creating idmuser01 on ${target} host"
    ${ssh} ${target} "echo RedHat123^ | kinit admin && ipa user-add idmuser01 --first user01 --last idm --cn 'idmuser01'"
    if [ $? -eq 0 ]
    then
      print_SUCCESS
    else
      print_FAIL
    fi
  fi
  

  target=${clienttarget}
  package='ipa-client'

  print_header "Setting up ${target} for lab exercise work:"
  host_reachable ${target}

  # Check for lab prerequisites
  CMD="rpm -q ${package}"
  if ! ${ssh} ${target} "${CMD}"
  then
    if ! rpm -q ansible
    then
      pad ' · Installing Ansible'
      yum install -y http://materials.example.com/classroom/ansible/ansible-2.5.0-0.0.devel.201801312256git.512d6f6ac6.el7.ans.noarch.rpm
      if [ $? -eq 0 ]
      then
        print_SUCCESS
      else
        print_FAIL
      fi
    fi

    if [ ! -d "$ansdir" ]; then
    pad " · Creating Ansible directory"

    ansdir='/home/student/ansible'
      mkdir $ansdir && chown -R student:student $ansdir
      if [ $? -eq 0 ]
      then
        print_SUCCESS
      else
        print_FAIL
      fi
    fi

    pad " · Installing prerequisites on ${target} host"
    cd /home/student/ansible && curl -O http://materials.example.com/classroom/ansible/ansible.cfg && curl -O http://materials.example.com/classroom/ansible/inventory && curl -O http://materials.example.com/classroom/ansible/install_ipa_client.yml && ansible-playbook install_ipa_client.yml --extra-vars ipa_client=${target}
    if [ $? -eq 0 ]
    then
      print_SUCCESS
    else
      print_FAIL
    fi
  else
    pad " · ipa-client package is installed on ${target}"
    print_SUCCESS
  fi
  print_line
}

function lab_cleanup {
  target=${workstationtarget}

  print_header "Cleaning up the lab on ${target}:"

  # Nothing to do
  pad ' . Cleaning lab files'
  print_SUCCESS

  print_line
}

############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/${platform_lib}

grading_main_program "$@"


